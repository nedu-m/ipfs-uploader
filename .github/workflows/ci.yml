name: Docker Build and Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: docker build -t nedumrr/ipfs_uploader:latest .

      - name: Save Docker image to file
        run: docker save -o ipfs_uploader.tar nedumrr/ipfs_uploader:latest

      - name: Upload Docker image to artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: ipfs_uploader.tar

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker image from file
        run: docker load -i ipfs_uploader.tar

      - name: Log in to Docker Hub using PAT
        run: echo "${{ secrets.DOCKER_PAT }}" | docker login -u nedumrr --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push nedumrr/ipfs_uploader:latest

  push-to-AWS-ECR:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker image from file
        run: docker load -i ipfs_uploader.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Create ECR repository if it doesn't exist
        id: ecr-repo
        run: |
          aws ecr describe-repositories --repository-names ipfs_uploader || \
          aws ecr create-repository --repository-name ipfs_uploader

      - name: Log in to Amazon ECR
        id: ecr-login
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 058264444282.dkr.ecr.eu-north-1.amazonaws.com

      - name: Tag Docker image for ECR
        run: docker tag nedumrr/ipfs_uploader:latest 058264444282.dkr.ecr.eu-north-1.amazonaws.com/ipfs_uploader:latest

      - name: Push Docker image to ECR
        run: docker push 058264444282.dkr.ecr.eu-north-1.amazonaws.com/ipfs_uploader:latest
